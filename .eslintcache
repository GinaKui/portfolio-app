[{"/Users/ying/Documents/dev-portfolio/src/App.js":"1","/Users/ying/Documents/dev-portfolio/src/pages/LandingPage.js":"2","/Users/ying/Documents/dev-portfolio/src/pages/SkillPage.js":"3","/Users/ying/Documents/dev-portfolio/src/components/ProjectCard.js":"4","/Users/ying/Documents/dev-portfolio/src/index.js":"5","/Users/ying/Documents/dev-portfolio/src/pages/ProjectPage.js":"6","/Users/ying/Documents/dev-portfolio/src/components/SkillCard.js":"7","/Users/ying/Documents/dev-portfolio/src/components/ProjectModal.js":"8"},{"size":384,"mtime":1571356872000,"results":"9","hashOfConfig":"10"},{"size":1271,"mtime":1606676986000,"results":"11","hashOfConfig":"10"},{"size":900,"mtime":1606616312000,"results":"12","hashOfConfig":"10"},{"size":1132,"mtime":1606676499000,"results":"13","hashOfConfig":"10"},{"size":217,"mtime":1571359112000,"results":"14","hashOfConfig":"10"},{"size":2686,"mtime":1608502636000,"results":"15","hashOfConfig":"10"},{"size":508,"mtime":1606602649000,"results":"16","hashOfConfig":"10"},{"size":856,"mtime":1606676147000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"aig2iu",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/Users/ying/Documents/dev-portfolio/src/App.js",[],["40","41"],"/Users/ying/Documents/dev-portfolio/src/pages/LandingPage.js",[],["42","43"],"/Users/ying/Documents/dev-portfolio/src/pages/SkillPage.js",[],"/Users/ying/Documents/dev-portfolio/src/components/ProjectCard.js",["44"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card, CardImg, CardText, CardBody, CardLink,\n  CardTitle\n} from 'reactstrap';\nimport ProjectModal from './ProjectModal';\n\nimport './ProjectCard.css';\n\nconst ProjectCard = ({ project }) => {\n  const { name, description, img } = project;\n  // TODO: - capture gif as Modal showcare\n  return (\n    <Card className='ProjectCard'>\n      <ProjectModal buttonImg={img} demoImg={img} />\n      <CardBody>\n        <CardTitle>{name}</CardTitle>\n        <CardText>{description}</CardText>\n        { project.src_url && <CardLink href={project.src_url}><i className=\"fab fa-github\" title=\"github source code\"></i></CardLink> }\n        { project.deploy_url && <CardLink href={project.deploy_url}>live</CardLink> }\n      </CardBody>\n    </Card>\n  );\n};\n\nProjectCard.defaultProps = {\n  project: {\n    name: 'project',\n    description: 'brief description',\n    img: 'image url'\n  }\n};\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    name: PropTypes.string,\n    description: PropTypes.string,\n    img: PropTypes.string,\n  }).isRequired,\n}\nexport default ProjectCard;\n","/Users/ying/Documents/dev-portfolio/src/index.js",[],["45","46"],"/Users/ying/Documents/dev-portfolio/src/pages/ProjectPage.js",[],"/Users/ying/Documents/dev-portfolio/src/components/SkillCard.js",[],["47","48"],"/Users/ying/Documents/dev-portfolio/src/components/ProjectModal.js",["49","50","51","52"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst ProjectModal = (props) => {\n  const {\n    buttonImg,\n    demoImg,\n    className\n  } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <>\n      <Button className=\"bg-transparent\" onClick={toggle} style={{padding: 0}}>\n        <img src={buttonImg} width='100%' height='150px'/>\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalBody>\n        <img src={demoImg} width='100%' height='100%'/>\n        </ModalBody>\n      </Modal>\n    </>\n  );\n};\n\nProjectModal.propTypes = {\n  buttonImg: PropTypes.string.isRequired,\n  demoImg: PropTypes.string.isRequired\n};\n\nexport default ProjectModal;",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"53","replacedBy":"57"},{"ruleId":"55","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":4,"column":9,"nodeType":"61","messageId":"62","endLine":4,"endColumn":16},{"ruleId":"53","replacedBy":"63"},{"ruleId":"55","replacedBy":"64"},{"ruleId":"53","replacedBy":"65"},{"ruleId":"55","replacedBy":"66"},{"ruleId":"59","severity":1,"message":"67","line":3,"column":25,"nodeType":"61","messageId":"62","endLine":3,"endColumn":36},{"ruleId":"59","severity":1,"message":"68","line":3,"column":49,"nodeType":"61","messageId":"62","endLine":3,"endColumn":60},{"ruleId":"69","severity":1,"message":"70","line":19,"column":9,"nodeType":"71","endLine":19,"endColumn":59},{"ruleId":"69","severity":1,"message":"70","line":23,"column":9,"nodeType":"71","endLine":23,"endColumn":56},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],["72"],["73"],"no-unused-vars","'CardImg' is defined but never used.","Identifier","unusedVar",["72"],["73"],["72"],["73"],"'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]